题目大意：寻找字符串中最长子字符串，其中子字符串的每个字符至少出现k次
输入：s，k
输出：l
原思路：
    1、遍历统计每个字符出现的个数，放入map中，已小于k为分割点，统计各个子段最长长度
        剖析:子字符串可能局部满足无法保证整体满足。如s=“abcab”，k=2，l=0而不是2
    2 、类动态规划法，设置二维数组，i，j表示下标，当前状态依赖前一个状态
        剖析：动态规划法每个位置应存储结果，该方法保存之前状态。如s=“aba”，k=2，下一个状态“abab”l=4，之前的状态l=0
正答：
循环字符串，每次从当前位置向最后遍历，统计各个字符出现的次数，如果所有都大于k，记录最大下标，下次循环从最大下标开始。
亮点：
使用mask记录字符出现次数，并用m[26]数组记录已出现次数。如果大于k则mask相应位置于0，如果全部为0则记录最大
